angular.module('bhima.controllers')
.controller('report.service_exploitation', [
  '$scope',
  '$filter',
  '$translate',
  '$q',
  'validate',
  'connect',
  'appstate',
  function ($scope, $filter, $translate, $q, validate, connect, appstate) {
    var session = $scope.session = { count : {} };
    var dependencies = {};
    $scope.services = [];
    $scope.selected = null;

    dependencies.projects = {
      query : {
        tables : {
          'project' : {
            columns : ['id', 'abbr', 'name']
          }
        }
      }
    };

    dependencies.services = {
      query :'/services/'
    };

    function day () {
      session.dateFrom = new Date();
      session.dateTo = new Date();
      reset(session.services);
    }

    function week () {
      session.dateFrom = new Date();
      session.dateTo = new Date();
      session.dateFrom.setDate(session.dateTo.getDate() - session.dateTo.getDay());
      reset(session.services);
    }

    function month () {
      session.dateFrom = new Date();
      session.dateTo = new Date();
      session.dateFrom.setDate(1);
      reset(session.services);
    }

    $scope.options = [
      {
        label : 'CASH_PAYMENTS.DAY',
        fn : day,
      },
      {
        label : 'CASH_PAYMENTS.WEEK',
        fn : week,
      },
      {
        label : 'CASH_PAYMENTS.MONTH',
        fn : month
      }
    ];

    appstate.register('project', function (project) {
      $scope.project = project;

      validate.process(dependencies)
      .then(function (models) {
        $scope.projects = models.projects;
        session.services = models.services;

        var allProjectIds = models.projects.data.reduce(function (a,b) { return a + ',' + b.id ; }, '').substr(1);
        $scope.projects.post({
          id : allProjectIds,
          name : $translate.instant('CASH_PAYMENTS.ALL_PROJECTS')
        });

        session.project = project.id;
        search($scope.options[0]);
      });
    });

    function search (selection) {
      session.selected = selection;
      selection.fn();
    }

    function reset (services) {
      var req, exploitation;
      
      session.searching = true;
      session.active = !services;

      req = {
        dateFrom : $filter('date')(session.dateFrom, 'yyyy-MM-dd'),
        dateTo : $filter('date')(session.dateTo, 'yyyy-MM-dd')
      };

      // Process
      getCostAndProfit(services);

      // Get Cost and Profit
      function getCostAndProfit (services) {
        session.charge = 0;
        session.profit = 0;

        services.data.forEach(function (service) {
          exploitation = { id : service.id, name : service.service, id_pc : service.profit_center_id };
          
          getCost(service.cost_center_id)
          .then(handleResultCost)
          .then(getProfit)
          .then(handleResultProfit)
          .then(function () {
            console.log(exploitation);
          });

          $scope.services.push(exploitation);
        });
      }

      // A FIXE : PERIODIC EXPLOITATION
      function getCost(ccId) {
        return connect.req('/cost_periodic/' + $scope.project.id + '/' + ccId + '/' + req.dateFrom + '/' + req.dateTo);
      }

      function getProfit() {
        return connect.req('/profit_periodic/' + $scope.project.id + '/' + exploitation.id_pc + '/' + req.dateFrom + '/' + req.dateTo);
      }

      // function getCost(ccId) {
      //   return connect.req('/cost/' + $scope.project.id + '/' + ccId);
      // }

      // function getProfit() {
      //   return connect.req('/profit/' + $scope.project.id + '/' + exploitation.id_pc);
      // }

      function handleResultCost(value) {
        console.log('HRC : ', value);
        exploitation.charge = value.data.cost;
        session.charge += exploitation.charge; 
        return $q.when();
      }

      function handleResultProfit(value) {
        console.log('HRP : ', value);
        exploitation.profit = value.data.profit;
        session.profit += exploitation.profit;
        session.searching = false;
        $scope.services.push(exploitation);
        return $q.when();
      }

    }

    $scope.search = search;
    $scope.reset = reset;
  }
]);
